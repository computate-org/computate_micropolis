---
- name: "install Development Tools dependency"
  package:
    name: "@Development Tools"
    state: present
  become: true
  vars:
    ansible_python_interpreter: "{{ APP_PYTHON }}"
- name: "install Power Tools dependency"
  package:
    name: dnf-plugins-core
    state: present
  become: true
  vars:
    ansible_python_interpreter: "{{ APP_PYTHON }}"
- name: "install {{ APP_NAME }} dependencies"
  package:
    name:
      - swig
      - pygobject2-devel
      - pygtk2-devel
      - libXpm-devel
    state: present
  become: true
  vars:
    ansible_python_interpreter: "{{ APP_PYTHON }}"
  when: APP_PYTHON == '/usr/bin/python3'
- name: "install {{ APP_NAME }} dependencies"
  package:
    name:
      - swig
      - python3-devel
      - pygobject2-devel
      - python2-cairo-devel
      - pygtk2-devel
      - libXpm-devel
    state: present
  become: true
  vars:
    ansible_python_interpreter: "{{ APP_PYTHON }}"
  when: APP_PYTHON != '/usr/bin/python3'
- name:
  shell: alternatives --set python /usr/bin/python2
  become: true
  when: not lookup('file', 'usr/bin/python', errors='ignore')
- name: Create the directory {{ APP_SRC }}
  file:
    name: "{{ APP_SRC }}"
    state: directory
    owner: "{{ APP_USER }}"
    group: "{{ APP_GROUP }}"
  become: yes
- name: Check for the {{ APP_NAME }} README file
  stat:
    path: "{{ APP_SRC }}/README.md"
  register: APP_README_PATH
- name: Clone the {{ APP_REPO }} source code into {{ APP_SRC }}
  git:
    repo: "{{ APP_REPO }}"
    dest: "{{ APP_SRC }}"
    version: "{{ APP_TAG }}"
  when: not APP_README_PATH.stat.exists
- name: Create the directory {{ APP_SRC }}/MicropolisCore/src/TileEngine/objs
  file:
    name: "{{ APP_SRC }}/MicropolisCore/src/TileEngine/objs"
    state: directory
    owner: "{{ APP_USER }}"
    group: "{{ APP_GROUP }}"
- name: Create the directory {{ APP_SRC }}/MicropolisCore/src/MicropolisEngine/objs
  file:
    name: "{{ APP_SRC }}/MicropolisCore/src/MicropolisEngine/objs"
    state: directory
    owner: "{{ APP_USER }}"
    group: "{{ APP_GROUP }}"
- name: Create the directory {{ APP_SRC }}/MicropolisCore/src/CellEngine/objs
  file:
    name: "{{ APP_SRC }}/MicropolisCore/src/CellEngine/objs"
    state: directory
    owner: "{{ APP_USER }}"
    group: "{{ APP_GROUP }}"
- name: Make the source code in {{ APP_SRC }}
  shell:
    cmd: make
    chdir: "{{ APP_SRC }}"
- name: Sudo make the source code in {{ APP_SRC }}
  shell:
    cmd: make install
    chdir: "{{ APP_SRC }}"
  become: true
- name: Create the launcher /usr/share/applications/{{ APP_NAME }}.desktop
  template:
    src: app.desktop
    dest: "/usr/share/applications/{{ APP_NAME }}.desktop"
  become: true

